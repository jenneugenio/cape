name: Main
on: [push]
jobs:
  build:
    services:
      postgres:
        image: postgres:11.7-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - name: Setup go1.14 Environment
      uses: actions/setup-go@v1
      with:
          go-version: 1.14
      id: go
    - name: Install Protoc
      uses: arduino/setup-protoc@v1.1.0
      with:
          version: 3.11.4
    - name: Check out repository
      uses: actions/checkout@v1

    # Setup gsutil and download the appropriate version of Cape UI
    - name: Authenticate on GCS
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '300.0.0'
        service_account_email: ${{ secrets.GCS_SERVICE_ACCOUNT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Download Cape UI
      if: ${{ success() }}
      env:
        CAPE_UI_BUCKET: ${{ secrets.CAPE_UI_BUCKET }}
      run: scripts/download-ui.sh

    # We skip checking the docker version as GitHub actions does not use Docker
    # CE. Instead, they build their own version from the source of the moby
    # project. See more details here:
    # https://github.community/t5/GitHub-Actions/What-really-is-docker-3-0-6/td-p/30752
    - name: Bootstrap, Build, and Test
      run: |
        export SKIP_DOCKER_CHECK=1
        export PATH=$PATH:$HOME/go/bin
        export CAPE_DB_URL=postgres://postgres:dev@localhost:${{ job.services.postgres.ports[5432] }}/postgres?sslmode=disable
        export CAPE_DO_COVERAGE=1

        go run bootstrap.go -v bootstrap
        mage -v test:ci
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.txt
        flags: unittests
