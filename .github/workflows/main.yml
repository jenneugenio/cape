name: Main
on: [push]
jobs:
  build:
    services:
      postgres:
        image: postgres:11.7-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - name: Setup go1.14 Environment
      uses: actions/setup-go@v2
      with:
          go-version: 1.14
      id: go
    - name: Check out repository
      uses: actions/checkout@v1
    # We skip checking the docker version as GitHub actions does not use Docker
    # CE. Instead, they build their own version from the source of the moby
    # project. See more details here:
    # https://github.community/t5/GitHub-Actions/What-really-is-docker-3-0-6/td-p/30752
    - name: Bootstrap, Build, and Test
      run: |
        export SKIP_DOCKER_CHECK=1
        export PATH=$PATH:$HOME/go/bin
        export CAPE_DB_URL=postgres://postgres:dev@localhost:${{ job.services.postgres.ports[5432] }}/postgres?sslmode=disable
        export CAPE_DO_COVERAGE=1

        go run bootstrap.go -v bootstrap
        mage -v test:ci
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist --skip-publish --snapshot
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.txt
        flags: unittests
    - name: Build and push Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: capeprivacy/cape
        dockerfile: ./dockerfiles/Dockerfile.cape
        add_git_labels: true
        tag_with_ref: true
        tag_with_sha: true
