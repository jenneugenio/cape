kind: Service
apiVersion: v1
metadata:
  name: {{ template "cape.fullname" . }}
  namespace: {{ template "cape.namespace" . }}
  labels:
    {{- include "cape.labels" . | nindent 4 }}
spec:
{{- if (or (eq .Values.service.type "ClusterIP") (empty .Values.service.type)) }}
  type: ClusterIP
  {{- if .Values.service.clusterIP }}
  clusterIP: {{ .Values.service.clusterIP }}
  {{ end }}
{{- else if eq .Values.service.type "LoadBalancer" }}
  type: {{ .Values.service.type }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.service.loadBalancerSourceRanges | indent 4 }}
{{- end }}
{{- else }}
  type: {{ .Values.service.type }}
{{- end }}
{{- if .Values.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.service.externalIPs | indent 4 }}
{{- end }}
  ports:
  - name: {{ .Values.service.portName }}
    port: {{ .Values.service.port }}
    protocol: TCP
    targetPort: {{ .Values.service.port }}
{{ if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodePort))) }}
    nodePort: {{ .Values.service.nodePort }}
{{ end }}
{{ if not (empty .Values.service.uiPort) }}
  - name: {{ .Values.service.uiPortName }}
    port: {{ .Values.service.uiPort }}
    protocol: TCP
    targetPort: {{ .Values.service.uiPort }}
{{ if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodePort))) }}
    nodePort: {{ .Values.service.uiNodePort }}
{{ end }}
{{ end }}
  selector:
    {{- include "cape.selectorLabels" . | nindent 4 }}
