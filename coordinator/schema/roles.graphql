type Role {
  id: String!
  label: Label!
  system: Boolean!
}

input CreateRoleRequest {
  label: Label!
  identity_ids: [ID!]
}

input DeleteRoleRequest {
  id: String!
}

input AssignRoleRequest {
  role_id: String!
  identity_id: ID!
}

extend type Query {
  role(id: String!): Role! @isAuthenticated()
  roleByLabel(label: Label!): Role! @isAuthenticated()
  roles: [Role!] @isAuthenticated()
  roleMembers(role_id: String!): [Identity!] @isAuthenticated()
}

extend type Mutation {
  createRole(input: CreateRoleRequest!): Role! @isAuthenticated()
  deleteRole(input: DeleteRoleRequest!): String @isAuthenticated()

  assignRole(input: AssignRoleRequest!): Assignment! @isAuthenticated()
  unassignRole(input: AssignRoleRequest!): String @isAuthenticated()
}
