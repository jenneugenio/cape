type Role {
  id: ID!
  label: Label!
  system: Boolean!
  created_at: Time!
  updated_at: Time!
}

input CreateRoleRequest {
  label: Label!
  identity_ids: [ID!]
}

input DeleteRoleRequest {
  id: ID!
}

input AssignRoleRequest {
  role_id: ID!
  identity_id: ID!
}

extend type Query {
  role(id: ID!): Role!
  roleByLabel(label: Label!): Role!
  roles: [Role!]
  roleMembers(role_id: ID!): [Identity!]
}

extend type Mutation {
  createRole(input: CreateRoleRequest!): Role!
  deleteRole(input: DeleteRoleRequest!): String

  assignRole(input: AssignRoleRequest!): Assignment!
  unassignRole(input: AssignRoleRequest!): String
}
